% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wind_functions.R
\name{uv2ddff}
\alias{uv2ddff}
\title{Convert u and v Wind Components to Wind Speed and Wind Direction}
\usage{
uv2ddff(u, v = NULL, rad = FALSE)
}
\arguments{
\item{u}{\code{numeric} vector with u components or a 
\code{data.frame} or \code{zoo} object containing
a column named \code{u} and a column named \code{v}.}

\item{v}{\code{NULL} (default) or \code{numeric} vector.
If input \code{u} is a single vector \code{v} has to be specified.}

\item{rad}{\code{logical}, default is \code{FALSE}. Returns wind
direction in radiant rather than degrees.}
}
\value{
Returns a \code{data.frame} or \code{zoo} object (depending on input
\code{u}) with two columns named \code{dd}
and \code{ff} containing wind speed (same physical unit as
input \code{u}/\code{v}) and wind direction. Wind direction
is either in meteorological degrees (0 from North, from 90 East,
180 from South, and 270 from West) or in mathematical radiant
if input \code{rad = TRUE}.
}
\description{
Takes u/v wind components (zonal and meridional wind components) as input
and returns wind speed and meteorological wind direction.
}
\details{
Note: if both, \code{u} and \code{v} are provided they
do have to be of the same length OR one of them has to be of length 1.
The one with length 1 will be recycled.
}
\examples{
## Generate data.frame with u/v components for all 4 main wind directions
data <- data.frame(name = c("N","E","S","W"),
                   u    = c( 0, -1 , 0,  1 ),
                   v    = c(-1,  0,  1,  0 ))
## Use data.frame input
ddff <- uv2ddff(data)
cbind(data, ddff)
## Use u/v components as two separate vector inputs
ddff <- uv2ddff(data$u, data$v)
cbind(data, ddff)
## Radiant
ddff <- uv2ddff(data, rad = TRUE)
cbind(data, ddff)

## Use with zoo
library("zoo")
set.seed(100)
Sys.setenv("TZ" = "UTC")
data <- zoo(data.frame(u = rnorm(20, 2, 5), v = rnorm(20, 0, 4)),
            as.POSIXct("2019-01-01 12:00") + 0:19 * 3600)
head(data)
class(data)
## Calculate dd/ff
ddff <- uv2ddff(data)
head(ddff)
class(ddff)

}
\seealso{
ddff2uv
}
\author{
Reto Stauffer
}
